@inject NavigationManager NavigationManager

@code {
    [CascadingParameter] HttpContext _httpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var returnUrl = Uri.EscapeDataString(NavigationManager.Uri);
        NavigationManager.NavigateTo($"/NotAuthorized?returnUrl={returnUrl}", forceLoad: true);
    }

}